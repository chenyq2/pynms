syntax = "proto3";

import "google/protobuf/any.proto";

package pynms_api;

// The types of encoding that the API supports. This specifies
// how the client would like the data encoded back. Expanded
// from openconfig-rpc.
enum EncodingType {
	// IETF specification JSON
	JSON_IETF = 0;
	// PyangBind specific internal JSON
	JSON_PYBIND = 100;
}

// The types of command that are supported by the server. This
// allows filtering of the data that is returned from a Get
// command in the service.
enum GetDataCommand {
	GET_ALL = 0;
	GET_CONFIG = 1;
	GET_OPSTATE = 2;
	GET_OPER = 3;
}

// Response codes from the API - these are utilised in the response
// to a Get command in the service.
enum RPCResponse {
	OK = 0;
	NOK = 1;
	UNSUPPORTED_PATH = 2;
	INVALID_PATH = 3;
	INVALID_CONFIGURATION = 4;
	UNSUPPORTED_INTERVAL = 5;
	INVALID_SUBSCRIPTION_ID = 6;
	UNSUPPORTED_ENCODING = 7;
}

service OCPyNMS {
	rpc Get(GetRequest) returns (GetResponse);
}

// The submessage utilised for get requests within a larger
// GetRequest
message GetRequestOperation {
	string operation_id = 1;
	GetDataCommand operation = 2;
	string path = 3;
}

// Message sent by the client to the server when a request is
// made.
message GetRequest {
	uint64 request_id = 1;
	EncodingType encoding = 2;
	string prefix = 3;
	repeated GetRequestOperation get_request = 4;
}

// The submessage used by the server to respond to a get request
// from a client.
message GetResponseOperation {
	string operation_id = 1;
	string path = 2;
	string value = 3;
	RPCResponse response_code = 4;
	string message = 5;
}

// The message used by the server in response to a get request.
message GetResponse {
	uint64 request_id = 1;
	repeated GetResponseOperation response = 2;
}

